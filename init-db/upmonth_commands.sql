create table if not exists `upmonth-query-db`.upmonth_commands
(
    command              text       not null,
    shortcode         text       null,
    shortcode_content tinyint(1) null,
    `type`              text       null,
    synonyms          text       null,
    generator         text       null,
    generator_kwargs  longtext   null
);



insert into `upmonth-query-db`.upmonth_commands (command, shortcode, shortcode_content, `type`, synonyms, generator, generator_kwargs)
values  ('uploaded', 'U', null, 'Action Command', 'upload-date', 'date_user_xml', '{''negatable'': True, ''user_autofill'':''[contributorEntity]'', ''description'': ''looks for files uploaded eg.: uploaded last week by me''}'),
        ('read', 'READ', null, 'Action Command', 'opened, viewed', 'date_user_xml', '{''negatable'': True, ''description'': ''looks for files read eg.: read last week by me''}'),
        ('favorited', 'FAV', null, 'Flag Command', 'liked', 'date_user_xml', '{''negatable'': True, ''description'': ''looks for files liked eg.: favorited last week by me''}'),
        ('shared', 'SH', null, 'Action Command', null, 'shared_date_user_xml', '{''negatable'': True, ''description'': ''look for shared documents'', ''other_user_keyword'': ''with''}'),
        ('sent', null, null, 'Action Command', null, 'shared_date_user_xml', '{''negatable'': True, ''description'': ''look for documents sent'', ''other_user_keyword'': ''to user''}'),
        ('contributed', 'CNTR', null, 'Action Command', 'emailed, e-mailed', 'date_user_xml', '{''negatable'': True, ''user_autofill'':''[contributorEntity]'', ''description'': ''looks for files contributed eg.: contributed last week by me''}'),
        ('modified', 'MOD', null, 'Action Command', 'edited, written', 'date_user_xml', '{''negatable'': True, ''description'': ''looks for files modified eg.: edited last week by me''}'),
        ('taught', 'TGT', null, 'Action Command', null, 'date_user_xml', '{''negatable'': True, ''description'': ''looks for files taught eg.: taught last week by me''}'),
        ('signed', 'SIG', null, 'Flag Command', null, 'date_user_xml', '{''negatable'': True, ''description'': ''looks for signed files eg.: signed last week by me''}'),
        ('received', null, null, 'Action Command', null, 'date_user_xml', '{''negatable'': True, ''description'': ''looks for received files eg.: received last week by me''}'),
        ('document-date', 'D', null, 'Date Command', null, 'date_xml', '{''optional'': False, ''description'': ''sets the global document date range for entered commands''}'),
        ('created-date', null, null, 'Date Command', null, 'date_xml', '{''optional'': True, ''description'': ''sets the global created date range for entered commands''}'),
        ('modified-date', null, null, 'Date Command', null, 'date_xml', '{''optional'': True, ''description'': ''sets the global modified date range for entered commands''}'),
        ('effective-date', 'EFF', null, 'Date Command', null, 'date_xml', '{''optional'': True, ''description'': ''sets the global date to be effective date in specified range''}'),
        ('ocr', null, null, 'Command', 'scanned', 'date_xml', '{''optional'': True, ''description'': ''looks for OCR files''}'),
        ('private documents', null, null, 'File Privacy', null, 'date_xml', '{''optional'': True, ''description'': ''looks for private files''}'),
        ('public documents', null, null, 'File Privacy', null, 'date_xml', '{''optional'': True, ''description'': ''looks for public files''}'),
        ('semipublic', null, null, 'File Privacy', 'semi public', 'date_xml', '{''optional'': True, ''description'': ''look for semi-public files''}'),
        ('high interest', 'HIGH', null, 'Flag Command', null, 'date_user_xml', '{''negatable'': True, ''description'': ''looks for high interest files''}'),
        ('low interest', 'LOW', null, 'Flag Command', null, 'date_user_xml', '{''negatable'': True, ''description'': ''looks for low interest files''}'),
        ('++', null, null, 'Search Command', null, 'keyword_xml', '{''search'': ''search terms ++'', ''description'': ''looks for exact words in exact order that are enclosed with ++ symbols eg.: ++ electric car ++''}'),
        ('+', null, null, 'Search Command', null, 'keyword_xml', '{''search'': ''search terms +'', ''description'': ''looks for similar words in exact order enclosed with a single plus eg.: + electirc car +''}'),
        ('+"', null, null, 'Search Command', null, 'keyword_xml', '{''search'': ''search terms "'', ''description'': ''looks for exact words enclosed in + quotes eg.: +"car electric"''}'),
        ('doctype', null, null, 'Command', 'document-type', 'type_xml', '{''search'': ''document type'', ''negatable'': True, ''description'': ''looks for document types''}'),
        ('docgroup', null, null, 'Command', 'document-group', 'type_xml', '{''search'': ''document group'', ''negatable'': True, ''description'': ''looks for document groups''}'),
        ('structure', null, null, 'Classification', null, 'type_xml', '{''search'': ''document structure'', ''negatable'': True, ''description'': ''looks for structure documents''}'),
        ('source', null, null, 'Classification', null, 'type_xml', '{''search'': ''document source'', ''negatable'': True, ''description'': ''looks for source documents''}'),
        ('class', 'AC', 1, 'Classification', 'asset-class, asset class', 'type_xml', '{''search'': ''document class'', ''negatable'': True, ''description'': ''looks for class documents''}'),
        ('strategy', null, null, 'Classification', null, 'type_xml', '{''search'': ''document strategy'', ''negatable'': True, ''description'': ''looks for strategy documents''}'),
        ('specialty', null, null, 'Classification', null, 'type_xml', '{''search'': ''document specialty'', ''negatable'': True, ''description'': ''looks for specialty documents''}'),
        ('region', null, null, 'Classification', null, 'type_xml', '{''search'': ''document region'', ''negatable'': True, ''description'': ''looks for region documents''}'),
        ('sector', null, null, 'Classification', null, 'type_xml', '{''search'': ''document sector'', ''negatable'': True, ''description'': ''looks for sector documents''}'),
        ('subsector', null, null, 'Classification', null, 'type_xml', '{''search'': ''document subsector'', ''negatable'': True, ''description'': ''looks for sub sector documents''}'),
        ('economy', null, null, 'Classification', null, 'type_xml', '{''search'': ''document economy'', ''negatable'': True, ''description'': ''looks for economy documents''}'),
        ('exposure', null, null, 'Classification', null, 'type_xml', '{''search'': ''document exposure'', ''negatable'': True, ''description'': ''looks for exposure documents''}'),
        ('marketcap', null, null, 'Classification', 'market cap, market-cap', 'type_xml', '{''search'': ''document marketcap'', ''negatable'': True, ''description'': ''looks for marketcap documents''}'),
        ('contains', null, null, 'Search Command', 'mentions, mentioned, contained, contain, mention, talks about, about', 'content_xml', '{''negatable'': True, ''description'': ''looks for files containing search terms''}'),
        ('morelikethis', 'MLT', 1, 'Search Command', 'more like this', 'content_xml', '{''negatable'': True, ''description'': ''more like this search''}'),
        ('tags', 'TAG', 1, 'Tag Command', 'tagged', 'content_xml', '{''negatable'': True, ''description'': ''looks for files containing tags''}'),
        ('stag', 'STAG', 1, 'Tag Command', null, 'content_xml', '{''negatable'': True, ''description'': ''looks for files containing system tags''}'),
        ('filename', 'FN', 1, 'Command', 'file name', 'content_xml', '{''negatable'': True, ''description'': ''looks for files with entered filename''}'),
        ('filetype', null, null, 'Command', 'file type', 'content_xml', '{''negatable'': True, ''description'': ''looks for files with entered file type''}'),
        ('fundticker', 'ID', 1, 'Command', 'fundname, fund, ticker', 'content_xml', '{''negatable'': True, ''description'': ''expects fund name or fund ticker and returns files belonging to the matched fund''}'),
        ('concept', 'CONCEPT', 1, 'Command', 'concepts', 'content_xml', '{''negatable'': True, ''description'': ''looks for files with concept''}'),
        ('keywords', null, null, 'Search Command', null, 'content_xml', '{''negatable'': True, ''description'': ''looks for files containing keywords''}'),
        ('hasemail', null, null, 'Command', 'has email', 'synonym_xml', '{''description'': ''has email command''}'),
        ('hasflags', null, null, 'Flag Command', 'has flags', 'synonym_xml', '{''description'': ''has flags command''}'),
        ('hasupdocs', null, null, 'Command', 'has updocs, hasupdoc, has updoc', 'synonym_xml', '{''description'': ''has updocs command''}'),
        ('hasmemo', null, null, 'Command', 'has memo, hasmemos, has memos', 'synonym_xml', '{''description'': ''has memo command''}'),
        ('hasstag', null, null, 'Tag Command', 'has-stag', 'synonym_xml', '{''description'': ''file with system tags''}'),
        ('hasetag', null, null, 'Tag Command', 'has-etag', 'synonym_xml', '{''description'': ''file with entity tags''}'),
        ('positive sentiment', null, null, 'Sentiment', null, 'synonym_xml', '{''description'': ''file with positive sentiment''}'),
        ('negative sentiment', null, null, 'Sentiment', null, 'synonym_xml', '{''description'': ''file with negative sentiment''}'),
        ('no-id', null, null, 'Command', null, 'simple_command_flags_xml', '{''description'': ''Looks for files without fund ID''}'),
        ('no-eff', null, null, 'Command', null, 'simple_command_flags_xml', '{''description'': ''Looks for files without effective date''}'),
        ('no-etag', null, null, 'Tag Command', null, 'simple_command_flags_xml', '{''description'': ''Looks for files without entity tags''}'),
        ('no-stag', null, null, 'Tag Command', null, 'simple_command_flags_xml', '{''description'': ''Looks for files without system tags''}'),
        ('person', null, null, 'Command', null, 'user_xml', '{''description'': ''looks for files uploaded by a certain user'', ''tooltip'': ''name or an email of an user''}'),
        ('entity', null, null, 'Command', null, 'user_xml', '{''description'': ''looks for files uploaded by an user belonging to entered entity'', ''tooltip'': ''name of an entity''}'),
        ('private equity', 'PE', null, 'Command', null, 'synonym_xml', '{''description'': ''find documents classified as Private Equity''}'),
        ('private credit', 'PC', null, 'Command', null, 'synonym_xml', '{''description'': ''find documents classified as Private Credit''}'),
        ('contains-exactly', 'MATCH', 1, 'Search Command', 'matches-exactly, mentions-exactly, exact-match', 'content_xml_apostrophe', '{''description'': ''looks for exact words in exact order''}');